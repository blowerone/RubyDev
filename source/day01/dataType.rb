#数值类型number包括：Integer整型分两种，如果在31位以内（四字节），那为Fixnum实例。如果超过，即为Bignum实例。
#					 float浮点型
#					 string字符串类型
#					 []数组
#						=数组字面量通过[]中以逗号分隔定义，且支持range定义。
#						=（1）数组通过[]索引访问
#						=（2）通过赋值操作插入、删除、替换元素
#						=（3）通过+，－号进行合并和删除元素，且集合做为新集合出现
#						=（4）通过<<号向原数据追加元素
#						=（5）通过*号重复数组元素
#						=（6）通过｜和&符号做并集和交集操作（注意顺序）
#                     {}哈希类型，Ruby 哈希是在大括号内放置一系列键/值对，键和值之间使用逗号和序列 => 分隔。尾部的逗号会被忽略。
#					  范围类型，表示一个区间

#--------------------------------------------------------------------------
#*********************算术符*************************

=begin
算术操作
加减乘除操作符：+-*/；指数操作符为**
=end

puts 2**(1/4)   #1与4的商为0，然后2的0次方为1 
puts 16**(1/4.0)#1与4.0的商为0.25（四分之一），然后开四次方根

#可以使用序列 #{ expr } 替换任意 Ruby 表达式的值为一个字符串。在这里，expr 可以是任意的 Ruby 表达式。

puts "Multiplication Value : #{24*60*60}"; #输出 Multiplication Value : 86400

#*********************数组*************************
ary = [ "fred", 10, 3.14, "This is a string", "last element", ]
ary.each do |i|
    puts i
end

#*********************哈希*************************
puts "\n-------hash type-----"
puts "\n"
hsh  = { "red" => 0xf00, "green" => 0x0f0, "blue" => 0x00f }
hsh.each do |key, value|

    print key, " is ", value, "\n"
end

#*********************范围*************************
=begin
范围类型
一个范围表示一个区间。
范围是通过设置一个开始值和一个结束值来表示。范围可使用 s..e 和 s...e 来构造，或者通过 Range.new 来构造。
使用 .. 构造的范围从开始值运行到结束值（包含结束值）。使用 ... 构造的范围从开始值运行到结束值（不包含结束值）。当作为一个迭代器使用时，范围会返回序列中的每个值。
范围 (1..5) 意味着它包含值 1, 2, 3, 4, 5，范围 (1...5) 意味着它包含值 1, 2, 3, 4 。
=end
puts "\n----range----"
puts "\n"
(10..15).each do |n|
    print n, ' '
end


